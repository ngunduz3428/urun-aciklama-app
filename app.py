
import streamlit as st
import pandas as pd
from io import BytesIO

st.set_page_config(page_title="ÃœrÃ¼n AÃ§Ä±klama OtomatÄ±", layout="centered")

st.title("â˜• ÃœrÃ¼n AÃ§Ä±klama OtomatÄ±")
st.write("Excel dosyanÄ± yÃ¼kle, biz senin iÃ§in Ã¼rÃ¼n aÃ§Ä±klamasÄ± oluÅŸturalÄ±m!")

def generate_description_safe(row):
    name = str(row.get("name [tr]", ""))
    power = str(row.get("GÃ¼Ã§", "")).strip()
    auto_off = "otomatik kapanma Ã¶zelliÄŸi" if "Evet" in str(row.get("Otomatik kapanma", "")) else ""
    sound_alert = "sesli uyarÄ± sistemi" if "Evet" in str(row.get("Sesli uyarÄ±", "")) else ""
    tank = str(row.get("Su tankÄ± kapasitesi", "")).split("-")[-1] if pd.notna(row.get("Su tankÄ± kapasitesi")) else ""
    cups = str(row.get("Bardak kapasitesi", "")).split("_")[-1] if pd.notna(row.get("Bardak kapasitesi")) else ""
    color = str(row.get("ÃœrÃ¼n rengi", "")).split("-")[-1] if pd.notna(row.get("ÃœrÃ¼n rengi")) else ""
    lock = "emniyet kilidi" if "Var" in str(row.get("Emniyet klidi", "")) else ""
    light = "uyarÄ± Ä±ÅŸÄ±ÄŸÄ±" if "Var" in str(row.get("UyarÄ± Ä±ÅŸÄ±ÄŸÄ±", "")) else ""

    features = [power + " gÃ¼cÃ¼" if power else "", auto_off, sound_alert,
                f"{tank} L su tankÄ±" if tank else "", f"{cups} bardak kapasitesi" if cups else "",
                f"{color} tasarÄ±mÄ±" if color else "", lock, light]
    features = [f for f in features if f]

    description = f"{name}, " + ", ".join(features) + " ile donatÄ±lmÄ±ÅŸtÄ±r. Hem ÅŸÄ±k tasarÄ±mÄ±yla hem de kullanÄ±m kolaylÄ±ÄŸÄ±yla Ã¶ne Ã§Ä±kar."
    return description

def to_excel(df):
    output = BytesIO()
    with pd.ExcelWriter(output, engine="openpyxl") as writer:
        df.to_excel(writer, index=False)
    return output.getvalue()

uploaded_file = st.file_uploader("ğŸ“‚ Excel dosyasÄ±nÄ± yÃ¼kle (.xlsx)", type=["xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)
    st.success("Dosya yÃ¼klendi! Ä°Ã§eriÄŸi aÅŸaÄŸÄ±da:")
    st.dataframe(df)

    with st.spinner("AÃ§Ä±klamalar oluÅŸturuluyor..."):
        df["ÃœrÃ¼n AÃ§Ä±klamasÄ±"] = df.apply(generate_description_safe, axis=1)

    st.success("âœ… AÃ§Ä±klamalar oluÅŸturuldu!")

    st.dataframe(df)

    excel_data = to_excel(df)
    st.download_button(
        label="ğŸ“¥ Excel'e Aktar",
        data=excel_data,
        file_name="urun_aciklama_sonuclari.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )
